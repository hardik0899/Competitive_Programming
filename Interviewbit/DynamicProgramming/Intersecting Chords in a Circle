/*

Given a number N, return number of ways you can draw N chords in a circle with 2*N points such that no 2 chords intersect.
Two ways are different if there exists a chord which is present in one way and not in other.

For example,

N=2
If points are numbered 1 to 4 in clockwise direction, then different ways to draw chords are:
{(1-2), (3-4)} and {(1-4), (2-3)}

So, we return 2.
Notes:

1 ≤ N ≤ 1000
Return answer modulo 109+7.

*/

//The pattern gives Catalan numbers 1,1,2,5,14...
//So the solution is to find nth catalan number.

int Solution::chordCnt(int n){
    long long int dp[n+1];
   // if(n%2!=0) return 0;
    if(n==0||n==1)
     return 1;
    else if(n==2)
     return 2;
    else if(n>2){
        dp[0]=1;
        dp[1]=1;
        dp[2]=2;
        for(int i=3;i<=n;i++){
            dp[i]=0;
            for(int k=0;k<i;k++){
                dp[i]=(dp[i]+dp[i-k-1]*dp[k])%1000000007;
            }
        }
       
    }
     return dp[n]%1000000007;
}
